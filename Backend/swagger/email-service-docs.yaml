swagger: "2.0"
info:
  title: "API documentation"
  version: "1.0"
  description: "Starlight Bank email management REST API.\nThe base-path of the API is `/DevOps`"
  contact:
    name: Mateo Matta LÃ³pez
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

basePath: /DevOps

schemes:
  - http

paths:
  /DevOps:
    post:
      tags:
      - admins
      operationId: api.email.create_message
      consumes:
      - application/json
      produces:
      - application/json

      parameters:
        - in: body
          name: message_payload
          description: Inventory message to add
          schema:
            $ref: '#/definitions/Message'
            type: object
        - name: X-Parse-REST-API-Key
          in: header
          description: an API-Key authorization header
          required: true
          type: string
        - name: X-JWT-KWY
          in: header
          description: an JWT Token authorization header
          # required: false
          type: string
      security:
        - APIKeyHeader: []
      responses:
        201:
          description: Successfully added message to the DB
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists

    put:
      tags:
      - admins
      operationId: api.email.update_message
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: body
          name: message_payload
          description: Inventory message to add
          schema:
            $ref: '#/definitions/Message'
            type: object
        - name: X-Parse-REST-API-Key
          in: header
          description: an API-Key authorization header
          required: true
          type: string
        - name: X-JWT-KWY
          in: header
          description: an JWT Token authorization header
          # required: false
          type: string
      security:
        - APIKeyHeader: []
      responses:
        201:
          description: Successfully added Message to the DB
        400:
          description: invalid input, object invalid
        408:
          description: error, item not modified
        409:
          description: an existing item already exists

    get:
      tags:
      - public    
      operationId: api.email.read_message
      parameters:
        - name: messageTimeToLifeSec
          in: header
          description: Numeric timeToLifeSec of the message to get.
          required: true
          type: integer
      responses:
        '200':
          description: 'Fetch a message from the database'
          # schema:
          #     $ref: '#/definitions/Message'
    delete:
      tags:
      - admins
      parameters:
        - name: messageTimeToLifeSec
          in: header
          description: Numeric timeToLifeSec of the message to get.
          required: true
          type: integer
        - name: X-Parse-REST-API-Key
          in: header
          description: an API-Key authorization header
          required: true
          type: string
        - name: X-JWT-KWY
          in: header
          description: an JWT Token authorization header
          # required: false
          type: string
      security:
        - APIKeyHeader: []
      operationId: api.email.delete_message
      responses:
        200:
          description: Successfully deleted message
        400:
          description: invalid input, object invalid
        409:
          description: conflict error
        401:
          description: Not correctly authorized

  /generateJwtEndpoint:
      get:
        tags:
        - public
        operationId: api.email.generate_jwt_endpoint
        parameters:
          - name: X-Parse-REST-API-Key
            in: header
            description: an API-Key authorization header
            required: true
            type: string

        responses:
          '200':
            description: 'Fetch a JWT authentication key'
tags:
- name: public
  description: Operations available to regular developers
- name: admins
  description: Secured Admin-only calls

securityDefinitions:
  APIKeyHeader:
    type: apiKey
    name: X-Parse-REST-API-Key
    in: header
    x-apikeyInfoFunc: app.apikey_auth # The method to authenticate "app.apikey_auth"

definitions:
  Message:
    type: object
    properties:
      timeToLifeSec:  { type: integer }
      message:  { type: string }
      to: { type: string }
      from: { type: string }






